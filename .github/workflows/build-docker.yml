name: 🐳 Docker Build and Push
on:
  workflow_call:

jobs:
  docker:
    name: 🐳 Docker Image Build
    runs-on: ubuntu-latest
    steps:
      # Checkout a Git repository at a particular version.
      - name: 🐙 Git Checkout 📥
        uses: actions/checkout@v3
        with:
          # Repository name with owner.
          repository: '${{ github.repository }}'
          # PAT (Personal Access Token) used to fetch the repository.
          token: '${{ github.token }}'
          # Whether to execute `git clean -ffdx && git reset --hard HEAD` before fetching.
          clean: true
          # Do a sparse checkout on given patterns.
          sparse-checkout: null
          # Specifies whether to use cone-mode when doing a sparse checkout.
          sparse-checkout-cone-mode: true
          # Number of commits to fetch.
          fetch-depth: 1
          # Whether to fetch tags, even if fetch-depth > 0.
          fetch-tags: false
          # Whether to download Git-LFS files
          lfs: false
          # Add repository path as safe.
          set-safe-directory: true

      # GitHub Action to login against a Docker registry.
      - name: 🐳 Docker Login 🔐
        uses: docker/login-action@v3
        with:
          # Server address of Docker registry.
          registry: 'docker.io'
          # Username used to log against the Docker registry.
          username: ${{ vars.DOCKERHUB_USERNAME }}
          # Password or PAT (Personal Access Token) used to log against the Docker registry.
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          # Specifies whether the given registry is ECR.
          # Valid values: `auto`, `true` or `false`
          ecr: auto
          # Log out from the Docker registry at the end of a job.
          logout: true

      # Install QEMU (Quick EMUlator) static binaries.
      - name: 🐳 Docker Setup QEMU 🧠
        uses: docker/setup-qemu-action@v3
        with:
          # QEMU static binaries Docker image.
          image: 'docker.io/tonistiigi/binfmt:latest'
          # Platforms to install (e.g. arm64,riscv64,arm)
          platforms: all
          # Cache binfmt image to GitHub Actions cache backend.
          cache-image: true

      # Install QEMU (Quick EMUlator) static binaries.
      - name: 🐳 Docker Setup Buildx 🧰
        uses: docker/setup-buildx-action@v3
        with:
          # Sets the builder driver to be used.
          driver: 'docker-container'
          # Sets up docker build command as an alias to docker buildx build.
          install: false
          # Switch to this builder instance.
          use: true
          # Keep BuildKit state on cleanup. This is only useful on persistent self-hosted runners.
          keep-state: false
          # Cache buildx binary to GitHub Actions cache backend.
          cache-binary: true
          # Cleanup temp files and remove builder at the end of a job.
          cleanup: true

      - name: ⏰ Get UTC Time Now.
        id: date_utils
        run: echo "utc_time_now=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> "$GITHUB_OUTPUT"

      # Build and push Docker images with Buildx.
      - name: 🐳 Docker ⚙️ build and ⬆️ push images
        uses: docker/build-push-action@v6
        with:
          # Path to the Dockerfile.
          file: './docker/Dockerfile.nginx1.28.0'
          # List of metadata for an image.
          labels: |
            org.opencontainers.image.created='${{ steps.date_utils.outputs.utc_time_now }}'
          # Load is a shorthand for --output=type=docker
          load: false
          # List of target platforms for build.
          # Valid values: linux/amd64, linux/arm64
          platforms: linux/amd64
          # Push is a shorthand for --output=type=registry
          push: true
          # List of tags.
          tags: balajipothula/nginx:1.28.0
